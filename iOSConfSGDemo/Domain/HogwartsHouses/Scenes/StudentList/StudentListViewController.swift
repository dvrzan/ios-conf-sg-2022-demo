//
//  StudentListViewController.swift
//  iOSConfSGDemo
//
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StudentListDisplayLogic: AnyObject {
  func displayStudentList(viewModel: StudentList.FetchStudentList.ViewModel)
}

class StudentListViewController: UIViewController {
  var interactor: StudentListBusinessLogic?
  var router: (NSObjectProtocol & StudentListRoutingLogic & StudentListDataPassing)?

  @IBOutlet weak var tableView: UITableView!
  var students: [Student] = []

  // MARK: Object Lifecycle
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }

  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  private func setup() {
    let viewController = self
    let interactor = StudentListInteractor()
    let presenter = StudentListPresenter()
    let router = StudentListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View Lifecycle
  override func viewWillAppear(_ animated: Bool) {
    super.viewWillAppear(animated)

    loadStudentList()
  }

  func loadStudentList() {
    Task {
      await interactor?.fetchStudentList()
    }
  }
}

// MARK: Student List Display Logic
extension StudentListViewController: StudentListDisplayLogic {
  func displayStudentList(viewModel: StudentList.FetchStudentList.ViewModel) {
    students = viewModel.students
    DispatchQueue.main.async {
      self.tableView.reloadData()
    }
  }
}

// MARK: Table View Data Source
extension StudentListViewController: UITableViewDataSource {
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    students.count
  }

  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCell(withIdentifier: "studentCell", for: indexPath)
    let student = students[indexPath.row]

    cell.textLabel?.text = student.name

    return cell
  }
}

//MARK: Table View Delegate
extension StudentListViewController: UITableViewDelegate {}
